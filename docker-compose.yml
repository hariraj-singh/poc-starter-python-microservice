version: "3.8"

services:
  # sample_service:
  #   build: .
  #   ports:
  #     - "5000:5000" # Map TCP port 5000 in the container to port 8081 on the Docker host.
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - sample_service_bridge

  mongodb:
    image: mongo:latest
    container_name: mongodb_sample_service
    ports:
      - "27017:27017"
    volumes:
      - /container/mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - sample_service_bridge

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: kafka_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - sample_service_bridge

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_server_1
    depends_on:
      - zookeeper
    hostname: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    networks:
      - sample_service_bridge

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_server_2
    depends_on:
      - zookeeper
    hostname: kafka2
    ports:
      - "9093:9092"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9092,EXTERNAL://localhost:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    networks:
      - sample_service_bridge

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka_server_3
    depends_on:
      - zookeeper
    hostname: kafka3
    ports:
      - "9094:9092"
      - "29094:29094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9092,EXTERNAL://localhost:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    networks:
      - sample_service_bridge

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafka_ui_client
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
    command:
      [
        "--consumer-properties",
        "bootstrap.servers=kafka1:9092,kafka2:9092,kafka3:9092",
      ]
    networks:
      - sample_service_bridge

networks:
  sample_service_bridge:
    driver: bridge
